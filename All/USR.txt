
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
entity USR is
    Port ( Sin : in  STD_LOGIC;
           Pin : in  STD_LOGIC_VECTOR (3 downto 0);
           Sout : out  STD_LOGIC;
           Pout : out  STD_LOGIC_VECTOR (3 downto 0);
           Mode : in  STD_LOGIC_VECTOR (1 downto 0);
           rst : in  STD_LOGIC;
           clk : in  STD_LOGIC);
end USR;

architecture Behavioral of USR is
  SIGNAL temp:STD_LOGIC_VECTOR(3 downto 0):="0000";

begin
	PROCESS(rst, clk, mode, Sin, Pin)
		BEGIN
		IF rst = '1' THEN
			Pout <= "0000";
			Sout <= '0';
		ELSIF FALLING_EDGE(clk) THEN
			CASE mode IS
				WHEN "00" =>
					temp(3 downto 1) <= temp(2 downto 0);
					temp(0) <= Sin;
					Sout <= temp(3);
					Pout <= "0000";
				WHEN "01" =>
					temp(3 downto 1) <= temp(2 downto 0);
					temp(0) <= Sin;
					Pout <= temp;
					Sout <= '0';
				WHEN "10" =>
					temp <= Pin;
					Sout <= temp(3);

					temp(3 downto 1) <= temp(2 downto 0);
					Pout <= "0000";
				WHEN OTHERS =>
					Pout <= Pin;
					Sout <= '0';
		   END CASE;
		END IF;

		END PROCESS;

end Behavioral;

//////////////////////////////////////////////////


test bench

/////////////////////////////////////////////////


LIBRARY ieee;
USE ieee.std_logic_1164.ALL;
USE ieee.std_logic_unsigned.ALL; 

ENTITY USR_tb IS
END USR_tb;
 
ARCHITECTURE behavior OF USR_tb IS 
 
    -- Component Declaration for the Unit Under Test (UUT)
 
    COMPONENT USR
    PORT(
         Sin : IN  std_logic;
         Pin : IN  std_logic_vector(3 downto 0);
         Sout : OUT  std_logic;
         Pout : OUT  std_logic_vector(3 downto 0);
         Mode : IN  std_logic_vector(1 downto 0);
         rst : IN  std_logic;
         clk : IN  std_logic
        );
    END COMPONENT;
    

   --Inputs
   signal Sin : std_logic := '0';
   signal Pin : std_logic_vector(3 downto 0) := "1010";
   signal Mode : std_logic_vector(1 downto 0) := (others => '0');
   signal rst : std_logic := '0';
   signal clk : std_logic := '1';

 	--Outputs
   signal Sout : std_logic;
   signal Pout : std_logic_vector(3 downto 0);

   -- Clock period definitions
   constant clk_period : time := 10 ns;
 
BEGIN
 
	-- Instantiate the Unit Under Test (UUT)
   uut: USR PORT MAP (
          Sin => Sin,
          Pin => Pin,
          Sout => Sout,
          Pout => Pout,
          Mode => Mode,
          rst => rst,
          clk => clk
        );

   -- Clock process definitions
   clk_process :process
   begin
		clk <= '0';
		wait for clk_period/2;
		clk <= '1';
		wait for clk_period/2;
   end process;
 

   -- Stimulus process
   
      stim_proc_mode: process
		 begin
		 Mode<="00";
		 wait for 80 ns;

		 Mode<="01";
		 wait for 50 ns;

		 Mode<="10";
		 wait for 50 ns;

		 Mode<="11";
		 wait for 20 ns;
      end process;
 
		stim_proc_Sin:process
		begin
		wait for 10 ns;
		Sin<='1';
		wait for 10 ns;
		Sin<='0';
		wait for 10 ns;
		Sin<='1';
		wait for 10 ns;
		Sin<='0';
		wait for 10 ns;
		Sin<= '0';
		wait for 40 ns;
		Sin<='1';
		wait for 10 ns;
		Sin<='0';
		wait for 10 ns;
		Sin<='1';
		wait for 10 ns;
		Sin<='0';
		wait for 10 ns;
		Sin<= '0';
		wait ;
		end process;
		
	stim_proc_rst:process
	begin
	rst<='0';
	wait for 300 ns;
	rst<='1';
	wait for 10 ns;

   end process;

END;
